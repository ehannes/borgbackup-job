#!/bin/bash

NAME=$(basename $0)
show_help () {
  cat <<EOM
Usage: $NAME [OPTION]... [PATHS_TO_BACKUP]
Create backup with Borg.

Options:
  --help          Shows this help section
  --envfile file  Settings file for the backup to run

PATHS_TO_BACKUP   Files to backup. If given, this will override the files to backup
                  specified in the settings file.

Examples:
  # Backup multiple paths
  $NAME --envfile .borgbackup/backup.env guide /home/arthur/memories-from-earth

EOM
}


# Some helpers and error handling
info() { [[ -n $1 ]] && printf "\n%(%F_%T)T %s\n" -1 "$*" >&2; }
die() { rc=$1; shift; info "$*"; exit "$rc" ;}
abort() { [[ -n $1 ]] && printf "%s\n" "$*" >&2; exit 2 ;}
warning_or_error() { code=$1; ret="warning"; [[ $code -gt 1 ]] && ret="error"; echo $ret; }
trap 'die 2 "Backup interrupted"' INT TERM

init() {
  options=$(getopt --longoptions "help,envfile:" -- "" "$@")
  if [ $? -ne 0 ] # Problem with getting options?
  then
    show_help
  fi

  # Sets double dashes, which marks end of optional parameters
  eval set -- "$options"
  unset options

  while true; do
    case $1 in
      '--envfile')
        ${2:0:1} != '-' || abort "$1 requires a filename argument"
        envfile="$2"
        shift 2
      ;;
      '--help')
        show_help
        die 0
      ;;
      --) # Separator between optional and positional parameters
        shift
        break
        ;;
    esac
  done

  paths_on_cmdline=( "$@" )
  set --

  if [[ -n $envfile ]]; then
    source "$envfile" || abort
  fi
  # TO_BACKUP can come from $envfile, but files on command line overrides
  if [[ ${#paths_on_cmdline[*]} -gt 0 ]]; then
    TO_BACKUP=( "${paths_on_cmdline[@]}" )
  fi
  [[ ${#TO_BACKUP[*]} -eq 0 ]] && abort "invalid usage: nothing to backup (no files specified, and environment TO_BACKUP is not set)"

}

## main
init "$@"

info "Starting borg backup"

borg create                       \
     --stats                      \
     --show-version               \
     --show-rc                    \
     --filter AME                 \
     --list                       \
                                  \
     ::'{now:%Y-%m-%dT%H:%M:%S}'  \
     "${PATHS_TO_BACKUP[@]}" || die $? "borg create ended with $(warning_or_error $?). Not pruning repository"

info "Pruning repository"

borg prune             \
    --list             \
    --show-rc          \
    --keep-daily    14 \
    --keep-weekly   4  \
    --keep-monthly  12 \
    --keep-yearly   5   || die $? "borg prune ended with $(warning_or_error $?)."
