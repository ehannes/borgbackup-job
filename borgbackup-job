#!/bin/bash


# Some helpers and error handling
info() { [[ -n $1 ]] && printf "\n%(%F_%T)T %s\n" -1 "$*" >&2; }
die() { rc=$1; shift; info "$*"; exit "$rc" ;}
abort() { [[ -n $1 ]] && printf "%s\n" "$*" >&2; exit 2 ;}
warning_or_error() { code=$1; ret="warning"; [[ $code -gt 1 ]] && ret="error"; echo $ret; }
trap 'die 2 "Backup interrupted"' INT TERM

init() {
  paths_on_cmdline=()
  while [[ $# -gt 0 ]]; do
    case $1 in
      -e|--envfile)
        envfile="$2"
        shift 2 || abort "$1 requires a filename argument"
        ;;
      *)
        paths_on_cmdline+=("$1")
        shift
        ;;
    esac
  done

  if [[ -n $envfile ]]; then
    source "$envfile" || abort
  fi
  # TO_BACKUP can come from $envfile, but files on command line overrides
  if [[ ${#paths_on_cmdline[*]} -gt 0 ]]; then
    TO_BACKUP=( "${paths_on_cmdline[@]}" )
  fi
  [[ ${#TO_BACKUP[*]} -eq 0 ]] && abort "invalid usage: nothing to backup"

}

## main
init "$@"

info "Starting borg backup"

borg create                       \
     --stats                      \
     --show-version               \
     --show-rc                    \
     --filter AME                 \
     --list                       \
                                  \
     ::'{now:%Y-%m-%dT%H:%M:%S}'  \
     "${PATHS_TO_BACKUP[@]}" || die $? "borg create ended with $(warning_or_error $?). Not pruning repository"

info "Pruning repository"

borg prune             \
    --list             \
    --show-rc          \
    --keep-daily    14 \
    --keep-weekly   4  \
    --keep-monthly  12 \
    --keep-yearly   5   || die $? "borg prune ended with $(warning_or_error $?)."
